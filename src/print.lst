


ARM Macro Assembler    Page 1 


    1 00000000         ; Print.s
    2 00000000         ; Student names: change this to your names or look very 
                       silly
    3 00000000         ; Last modification date: change this to the last modifi
                       cation date or look very silly
    4 00000000         ; Runs on TM4C123
    5 00000000         ; EE319K lab 7 device driver for any LCD
    6 00000000         ;
    7 00000000         ; As part of Lab 7, students need to implement these LCD
                       _OutDec and LCD_OutFix
    8 00000000         ; This driver assumes two low-level LCD functions
    9 00000000         ; SSD1306_OutChar   outputs a single 8-bit ASCII charact
                       er
   10 00000000         ; SSD1306_OutString outputs a null-terminated string 
   11 00000000         
   12 00000000                 IMPORT           SSD1306_OutChar
   13 00000000                 IMPORT           SSD1306_OutString
   14 00000000                 EXPORT           LCD_OutDec
   15 00000000                 EXPORT           LCD_OutFix
   16 00000000                 PRESERVE8
   17 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   18 00000000                 THUMB
   19 00000000         
   20 00000000         
   21 00000000         
   22 00000000         ;-----------------------LCD_OutDec----------------------
                       -
   23 00000000         ; Output a 32-bit number in unsigned decimal format
   24 00000000         ; Input: R0 (call by value) 32-bit unsigned number
   25 00000000         ; Output: none
   26 00000000         ; Invariables: This function must not permanently modify
                        registers R4 to R11
   27 00000000         LCD_OutDec
   28 00000000         ;Binding  
   29 00000000 00000004 
                       N       EQU              4           ; the number to get
                                                             unit place for
   30 00000000 00000000 
                       CNT     EQU              0           ; count of number
   31 00000000        B 
                       FRM     RN               11          ; stack frame point
                                                            er
   32 00000000         
   33 00000000 E92D 0FF0       PUSH             {R4-FRM}
   34 00000004 B401            PUSH             {R0}
   35 00000006 B081            SUB              SP, #4      ; go up stack by on
                                                            e element, allocati
                                                            on
   36 00000008 46EB            MOV              FRM, SP     ; make FRM stack po
                                                            inter
   37 0000000A         
   38 0000000A B500            PUSH             {LR}
   39 0000000C F8DB 1000       LDR              R1, [FRM, #CNT] ; load count va
                                                            riable
   40 00000010 F04F 0200       MOV              R2, #0      ; make it 0 and sto
                                                            re
   41 00000014 F8CB 2000       STR              R2, [FRM,#CNT]
   42 00000018 F04F 030A       MOV              R3, #10     ; for division late



ARM Macro Assembler    Page 2 


                                                            r
   43 0000001C         
   44 0000001C F8DB 2000 
                       read    LDR              R2, [FRM,#CNT] ; load CNT
   45 00000020 F102 0201       ADD              R2, #1      ; increment CNT
   46 00000024 F8CB 2000       STR              R2, [FRM,#CNT] ; store back
   47 00000028         
   48 00000028 F8DB 2004       LDR              R2, [FRM,#N]
   49 0000002C F8DB C004       LDR              R12, [FRM,#N] ; copy
   50 00000030 FBB2 F2F3       UDIV             R2, R2, R3  ; unsigned div by 1
                                                            0, truncate smalles
                                                            t unit place
   51 00000034 F8CB 2004       STR              R2, [FRM,#N]
   52 00000038 FB02 F203       MUL              R2, R3      ; multiply by 10, s
                                                            et smallest unit pl
                                                            ace to 0
   53 0000003C EBAC 0102       SUB              R1, R12, R2 ; subtract to isola
                                                            te smallest unit pl
                                                            ace
   54 00000040 B402            PUSH             {R1}
   55 00000042         
   56 00000042 F8DB 1004       LDR              R1, [FRM,#N]
   57 00000046 2900            CMP              R1, #0
   58 00000048 D1E8            BNE              read
   59 0000004A         
   60 0000004A         write
   61 0000004A BC01            POP              {R0}
   62 0000004C F100 0030       ADD              R0, #0x30
   63 00000050 F7FF FFFE       BL               SSD1306_OutChar
   64 00000054         
   65 00000054 F8DB 1000       LDR              R1, [FRM, #CNT]
   66 00000058 3901            SUBS             R1, #1
   67 0000005A F8CB 1000       STR              R1, [FRM, #CNT]
   68 0000005E D1F4            BNE              write       ; for every 1 CNT d
                                                            isplay one characte
                                                            r
   69 00000060         
   70 00000060 F85D EB04       POP              {LR}
   71 00000064 B002            ADD              SP, #8
   72 00000066 E8BD 0FF0       POP              {R4-FRM}
   73 0000006A         
   74 0000006A         
   75 0000006A 4770            BX               LR
   76 0000006C         ;* * * * * * * * End of LCD_OutDec * * * * * * * *
   77 0000006C         
   78 0000006C         ; -----------------------LCD _OutFix--------------------
                       --
   79 0000006C         ; Output characters to LCD display in fixed-point format
                       
   80 0000006C         ; unsigned decimal, resolution 0.01, range 0.00 to 9.99
   81 0000006C         ; Inputs:  R0 is an unsigned 32-bit number
   82 0000006C         ; Outputs: none
   83 0000006C         ; E.g., R0=0,    then output "0.00 "
   84 0000006C         ;       R0=3,    then output "0.03 "
   85 0000006C         ;       R0=89,   then output "0.89 "
   86 0000006C         ;       R0=123,  then output "1.23 "
   87 0000006C         ;       R0=999,  then output "9.99 "
   88 0000006C         ;       R0>999,  then output "*.** "
   89 0000006C         ; Invariables: This function must not permanently modify



ARM Macro Assembler    Page 3 


                        registers R4 to R11
   90 0000006C         LCD_OutFix
   91 0000006C E92D 0FF0       PUSH             {R4-FRM}
   92 00000070 B401            PUSH             {R0}
   93 00000072 B081            SUB              SP, #4
   94 00000074 46EB            MOV              FRM, SP     ;
   95 00000076         
   96 00000076 B500            PUSH             {LR}
   97 00000078 F8DB 1000       LDR              R1, [FRM, #CNT] ; clear count
   98 0000007C F04F 0200       MOV              R2, #0
   99 00000080 F8CB 2000       STR              R2, [FRM,#CNT]
  100 00000084 F04F 030A       MOV              R3, #10     ; for division late
                                                            r
  101 00000088         
  102 00000088 F8DB 1004       LDR              R1, [FRM, #N]
  103 0000008C F5B1 7F7A       CMP              R1, #1000
  104 00000090 D310            BLO              inrange     ; if less than 1000
                                                            , number can be dis
                                                            played
  105 00000092         
  106 00000092         ;greater than 1000 output
  107 00000092         
  108 00000092 F04F 002A       MOV              R0, #0x2A
  109 00000096 F7FF FFFE       BL               SSD1306_OutChar ; output *
  110 0000009A         
  111 0000009A F04F 002E       MOV              R0, #0x2E
  112 0000009E F7FF FFFE       BL               SSD1306_OutChar ; .
  113 000000A2         
  114 000000A2 F04F 002A       MOV              R0, #0x2A
  115 000000A6 F7FF FFFE       BL               SSD1306_OutChar ; *
  116 000000AA         
  117 000000AA F04F 002A       MOV              R0, #0x2A
  118 000000AE F7FF FFFE       BL               SSD1306_OutChar ; *
  119 000000B2 E029            B                exit
  120 000000B4         
  121 000000B4         inrange
  122 000000B4 F8DB 2000       LDR              R2, [FRM,#CNT] ; load CNT
  123 000000B8 F102 0201       ADD              R2, #1      ; increment CNT
  124 000000BC F8CB 2000       STR              R2, [FRM,#CNT] ; store back
  125 000000C0         
  126 000000C0 F8DB 2004       LDR              R2, [FRM,#N]
  127 000000C4 F8DB C004       LDR              R12, [FRM,#N] ; copy
  128 000000C8 FBB2 F2F3       UDIV             R2, R2, R3  ; unsigned div by 1
                                                            0 to truncate least
                                                             significant digit
  129 000000CC F8CB 2004       STR              R2, [FRM,#N] ; store for later 
                                                            use
  130 000000D0 FB02 F203       MUL              R2, R3      ; multiply truncate
                                                            d number
  131 000000D4 EBAC 0102       SUB              R1, R12, R2 ; subtract from ori
                                                            ginal value to get 
                                                            number at specific 
                                                            unit
  132 000000D8 B402            PUSH             {R1}
  133 000000DA         
  134 000000DA F8DB 1000       LDR              R1, [FRM, #CNT]
  135 000000DE 2903            CMP              R1, #3      ; limit number to 3
                                                             for fixed output
  136 000000E0 D3E8            BLO              inrange



ARM Macro Assembler    Page 4 


  137 000000E2         
  138 000000E2 BC01            POP              {R0}
  139 000000E4 F100 0030       ADD              R0, #0x30
  140 000000E8 F7FF FFFE       BL               SSD1306_OutChar
  141 000000EC         
  142 000000EC F04F 002E       MOV              R0, #0x2E
  143 000000F0 F7FF FFFE       BL               SSD1306_OutChar ; output .
  144 000000F4         
  145 000000F4 BC01            POP              {R0}
  146 000000F6 F100 0030       ADD              R0, #0x30
  147 000000FA F7FF FFFE       BL               SSD1306_OutChar
  148 000000FE         
  149 000000FE BC01            POP              {R0}
  150 00000100 F100 0030       ADD              R0, #0x30
  151 00000104 F7FF FFFE       BL               SSD1306_OutChar
  152 00000108         
  153 00000108         exit
  154 00000108 F85D EB04       POP{LR}
  155 0000010C B002            ADD              SP, #8
  156 0000010E E8BD 0FF0       POP              {R4-FRM}
  157 00000112         
  158 00000112 4770            BX               LR
  159 00000114         
  160 00000114                 ALIGN
  161 00000114         ;* * * * * * * * End of LCD_OutFix * * * * * * * *
  162 00000114         
  163 00000114                 ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  164 00000114                 END                          ; end of file
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4 --apcs=interw
ork --depend=.\print.d -o.\print.o -I.\RTE\_Lab10 -I"C:\Users\The Administrator
\AppData\Local\Arm\Packs\ARM\CMSIS\5.7.0\CMSIS\Core\Include" -I"C:\Users\The Ad
ministrator\AppData\Local\Arm\Packs\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C123"
 --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 533" --predefi
ne="_RTE_ SETA 1" --predefine="TM4C123GH6PM SETA 1" --predefine="_RTE_ SETA 1" 
--list=.\print.lst Print.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 17 in file Print.s
   Uses
      None
Comment: .text unused
LCD_OutDec 00000000

Symbol: LCD_OutDec
   Definitions
      At line 27 in file Print.s
   Uses
      At line 14 in file Print.s
Comment: LCD_OutDec used once
LCD_OutFix 0000006C

Symbol: LCD_OutFix
   Definitions
      At line 90 in file Print.s
   Uses
      At line 15 in file Print.s
Comment: LCD_OutFix used once
exit 00000108

Symbol: exit
   Definitions
      At line 153 in file Print.s
   Uses
      At line 119 in file Print.s
Comment: exit used once
inrange 000000B4

Symbol: inrange
   Definitions
      At line 121 in file Print.s
   Uses
      At line 104 in file Print.s
      At line 136 in file Print.s

read 0000001C

Symbol: read
   Definitions
      At line 44 in file Print.s
   Uses
      At line 58 in file Print.s
Comment: read used once
write 0000004A

Symbol: write
   Definitions
      At line 60 in file Print.s
   Uses
      At line 68 in file Print.s
Comment: write used once
7 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

CNT 00000000

Symbol: CNT
   Definitions
      At line 30 in file Print.s
   Uses
      At line 39 in file Print.s
      At line 41 in file Print.s
      At line 44 in file Print.s
      At line 46 in file Print.s
      At line 65 in file Print.s
      At line 67 in file Print.s
      At line 97 in file Print.s
      At line 99 in file Print.s
      At line 122 in file Print.s
      At line 124 in file Print.s
      At line 134 in file Print.s

N 00000004

Symbol: N
   Definitions
      At line 29 in file Print.s
   Uses
      At line 48 in file Print.s
      At line 49 in file Print.s
      At line 51 in file Print.s
      At line 56 in file Print.s
      At line 102 in file Print.s
      At line 126 in file Print.s
      At line 127 in file Print.s
      At line 129 in file Print.s

2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

SSD1306_OutChar 00000000

Symbol: SSD1306_OutChar
   Definitions
      At line 12 in file Print.s
   Uses
      At line 63 in file Print.s
      At line 109 in file Print.s
      At line 112 in file Print.s
      At line 115 in file Print.s
      At line 118 in file Print.s
      At line 140 in file Print.s
      At line 143 in file Print.s
      At line 147 in file Print.s
      At line 151 in file Print.s

SSD1306_OutString 00000000

Symbol: SSD1306_OutString
   Definitions
      At line 13 in file Print.s
   Uses
      None
Comment: SSD1306_OutString unused
2 symbols
346 symbols in table
